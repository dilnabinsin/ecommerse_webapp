<%- include('../partials/user/header') %>

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Roboto:wght@300;400;500&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
<%- include("../../views/partials/user/loader") %>
<script src="main.js"></script>
<style>
    :root {
        --primary: #1a2526; /* Charcoal */
        --secondary: #3b4f50; /* Teal */
        --accent: #b7950b; /* Gold */
        --bg-light: #f8f9fa;
        --text-dark: #333;
        --text-muted: #666;
        --shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    body {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        font-family: 'Roboto', sans-serif;
        color: var(--text-dark);
    }

    .banner-area {
        background: var(--bg-light);
        padding: 20px 0;
        box-shadow: var(--shadow);
    }

    .breadcrumb-banner h1 {
        font-family: 'Playfair Display', serif;
        font-size: 28px;
        color: var(--primary);
    }

    .breadcrumb-banner nav a {
        color: var(--primary);
        text-decoration: none;
        transition: color 0.3s ease;
    }

    .breadcrumb-banner nav a:hover {
        color: var(--accent);
    }

    .container.my-5 {
        max-width: 1200px;
    }

    .order-details-card {
        background: #fff;
        border-radius: 12px;
        box-shadow: var(--shadow);
        margin-bottom: 30px;
    }

    .card-header {
        background: var(--primary);
        color: #fff;
        border-radius: 12px 12px 0 0;
        padding: 15px 20px;
    }

    .card-header h5 {
        font-family: 'Playfair Display', serif;
        font-size: 20px;
        margin: 0;
    }

    .card-body {
        padding: 20px;
    }

    /* Status Timeline */
    .status-timeline {
        position: relative;
        margin: 30px 0;
        display: flex;
        justify-content: space-between;
    }

    .status-line {
        position: absolute;
        top: 9px;
        left: 10px;
        right: 10px;
        height: 4px;
        background: #e0e0e0;
        z-index: 0;
    }

    .status-progress {
        position: absolute;
        top: 9px;
        left: 10px;
        height: 4px;
        background: var(--accent);
        z-index: 1;
        transition: width 0.5s ease;
    }

    .status-point {
        display: flex;
        flex-direction: column;
        align-items: center;
        z-index: 2;
    }

    .status-dot {
        width: 20px;
        height: 20px;
        border-radius: 50%;
        margin-bottom: 8px;
        transition: background 0.3s ease;
    }

    .status-active {
        background: var(--accent);
    }

    .status-inactive {
        background: #e0e0e0;
    }

    .status-point small {
        font-size: 12px;
        color: var(--text-muted);
        text-transform: uppercase;
    }

    /* Product and Summary Cards */
    .product-image {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border-radius: 8px;
    }

    .card h6 {
        font-family: 'Playfair Display', serif;
        font-size: 16px;
        color: var(--primary);
    }

    .badge {
        font-size: 12px;
        padding: 5px 10px;
    }

    .address-card {
        background: var(--bg-light);
        border-radius: 8px;
        padding: 20px;
    }

    .address-card h5 {
        font-family: 'Playfair Display', serif;
        font-size: 18px;
        color: var(--primary);
    }

    /* Buttons */
    .btn-primary, .btn-warning, .btn-danger {
        border-radius: 6px;
        padding: 8px 16px;
        font-size: 14px;
        transition: all 0.3s ease;
    }

    .btn-primary {
        background: var(--primary);
        border-color: var(--primary);
    }

    .btn-primary:hover {
        background: var(--secondary);
    }

    .btn-warning {
        background: var(--accent);
        border-color: var(--accent);
        color: #fff;
    }

    .btn-warning:hover {
        background: #d4af37;
    }

    .btn-danger {
        background: #dc2626;
        border-color: #dc2626;
    }

    .btn-danger:hover {
        background: #b91c1c;
    }

    /* Modal */
    .modal-content {
        border-radius: 12px;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
    }

    .modal-header {
        border-bottom: none;
        padding: 15px 20px;
    }

    .modal-title {
        font-family: 'Playfair Display', serif;
        font-size: 18px;
        color: var(--primary);
    }

    .modal-footer .btn-primary {
        background: var(--accent);
        border-color: var(--accent);
    }

    .modal-footer .btn-primary:hover {
        background: #d4af37;
    }

    /* Responsiveness */
    @media (max-width: 768px) {
        .status-timeline {
            flex-direction: column;
            align-items: flex-start;
            gap: 20px;
        }
        .status-line, .status-progress {
            display: none;
        }
        .status-point {
            flex-direction: row;
            gap: 10px;
        }
        .product-image {
            width: 60px;
            height: 60px;
        }
    }
</style>

<section class="banner-area organic-breadcrumb">
    <div class="container">
        <div class="breadcrumb-banner d-flex justify-content-end">
            <div>
                <h1>Order Details</h1>
                <nav class="d-flex align-items-center">
                    <a href="/">Home <i class="bi bi-arrow-right"></i></a>
                    <a href="/userProfile">Profile <i class="bi bi-arrow-right"></i></a>
                    <a href="/orders">Orders <i class="bi bi-arrow-right"></i></a>
                    <a href="#">Order Details</a>
                </nav>
            </div>
        </div>
    </div>
</section>

<div class="container my-5">
    <div class="order-details-card">
        <div class="card">
            <div class="card-header">
                <div class="d-flex justify-content-between align-items-center">
                    <h5>Order #<%= order.orderId %></h5>
                    <span class="badge bg-light text-dark">
                        <%= new Date(order.createdOn).toLocaleDateString() %>
                    </span>
                </div>
            </div>
            
            <div class="card-body">
                <!-- Order Status Timeline -->
                <div class="status-timeline">
                    <div class="status-line"></div>
                    <div class="status-progress" style="width: <%= 
                        order.status === 'pending' ? '0%' :
                        order.status === 'confirmed' ? '33%' :
                        order.status === 'shipped' ? '66%' :
                        order.status === 'delivered' ? '100%' : '0%'
                    %>;"></div>
                    <% const statuses = ['pending', 'confirmed', 'shipped', 'delivered']; %>
                    <% statuses.forEach(status => { %>
                        <div class="status-point">
                            <div class="status-dot <%= order.status === status || statuses.indexOf(order.status) > statuses.indexOf(status) ? 'status-active' : 'status-inactive' %>"></div>
                            <small><%= status.toUpperCase() %></small>
                        </div>
                    <% }); %>
                </div>

                <% if (order.status === 'delivered' || order.status === 'returned') { %>
                    <div class="card mt-4">
                        <div class="card-header bg-success text-white">
                            <h5 class="mb-0">Delivered On: <%= new Date(order.deliveredOn).toLocaleDateString() %></h5>
                        </div>
                    </div>
                <% } %>

                <% if (order.status === 'delivered' && !order.returnReason && order.requestStatus !== 'rejected') { %>
                    <div class="card mt-4">
                        <div class="card-header">
                            <h5 class="mb-0">Return Order <small class="text-muted">(15-day return window)</small></h5>
                        </div>
                        <div class="card-body">
                            <button class="btn btn-warning" onclick="initiateReturn('<%= order._id %>')">Request Return</button>
                        </div>
                    </div>
                <% } %>

                <% if (['return_requested', 'returning', 'returned'].includes(order.status)) { %>
                    <div class="card mt-4">
                        <div class="card-header <%= 
                            order.status === 'returned' ? 'bg-success' :
                            order.requestStatus === 'approved' ? 'bg-success' : 
                            order.requestStatus === 'rejected' ? 'bg-danger' : 
                            'bg-warning' %> text-white">
                            <h5 class="mb-0">Return Status: <%= order.status.replace('_', ' ').toUpperCase() %></h5>
                        </div>
                        <div class="card-body">
                            <p><strong>Reason:</strong> <%= order.returnReason %></p>
                            <% if (order.status === 'returned') { %>
                                <p><strong>Returned On:</strong> <%= new Date(order.updatedOn).toLocaleDateString() %></p>
                            <% } %>
                            <% if (order.returnImages && order.returnImages.length > 0) { %>
                                <h6>Uploaded Images:</h6>
                                <div class="d-flex gap-2">
                                    <% order.returnImages.forEach(image => { %>
                                        <img src="<%= image %>"  alt="Return image" class="img-thumbnail" style="width: 80px;">
                                    <% }); %>
                                </div>
                            <% } %>
                            <% if (order.requestStatus === 'approved') { %>
                                <div class="alert alert-success mt-3">Return approved and processing.</div>
                            <% } else if (order.requestStatus === 'rejected') { %>
                                <div class="alert alert-danger mt-3">
                                    <strong>Rejected:</strong> <%= order.rejectionReason %>
                                </div>
                            <% } else { %>
                                <div class="alert alert-info mt-3">Return request under review.</div>
                            <% } %>
                        </div>
                    </div>
                <% } %>

                <!-- Product Details and Summary -->
                <div class="row mb-4">
                    <div class="col-md-8">
                        <h5 class="mb-3">Product Details</h5>
                        <div class="card">
                            <div class="card-body d-flex">
                                <img src="<%= order.orderedItems[0].productImages[0] %>" 
                                     alt="<%= order.orderedItems[0].productName %>"
                                     class="product-image me-3">
                                <div>
                                    <h6><%= order.orderedItems[0].productName %></h6>
                                    <p class="mb-1">Quantity: <%= order.orderedItems[0].quantity %></p>
                                    <p class="mb-1">Price: ₹<%= (order.totalPrice / order.orderedItems[0].quantity).toFixed(2) %></p>
                                    <p class="mb-0">Status: 
                                        <span class="badge <%= 
                                            order.status === 'delivered' ? 'bg-success' :
                                            order.status === 'cancelled' ? 'bg-danger' :
                                            order.status === 'shipped' ? 'bg-info' :
                                            'bg-warning'
                                        %>">
                                            <%= order.status.toUpperCase() %>
                                        </span>
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <h5 class="mb-3">Order Summary</h5>
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex justify-content-between mb-2">
                                    <span>Subtotal:</span>
                                    <span>₹<%= order.totalPrice.toFixed(2) %></span>
                                </div>
                                <% if (order.discount > 0) { %>
                                    <div class="d-flex justify-content-between mb-2 text-success">
                                        <span>Coupon Discount:</span>
                                        <span>-₹<%= order.discount.toFixed(2) %></span>
                                    </div>
                                <% } %>
                                <div class="d-flex justify-content-between mb-2">
                                    <span>Delivery:</span>
                                    <span>₹<%= order.deliveryCharge.toFixed(2) %></span>
                                </div>
                                <hr>
                                <div class="d-flex justify-content-between fw-bold">
                                    <span>Total:</span>
                                    <span>₹<%= order.finalAmount.toFixed(2) %></span>
                                </div>
                                <div class="mt-3">
                                    <span class="text-muted">Payment:</span>
                                    <span class="badge <%= 
                                        order.paymentMethod === 'online' ? 'bg-success' :
                                        order.paymentMethod === 'wallet' ? 'bg-info' :
                                        'bg-warning'
                                    %>">
                                        <%= order.paymentMethod.toUpperCase() %>
                                    </span>
                                </div>
                            </div>
                        </div>
                        <% if (order.status === 'delivered') { %>
                            <a href="/download-invoice?orderId=<%= order.orderId %>" class="btn btn-primary mt-2 w-100">Download Invoice</a>
                        <% } %>
                        <% if (!['delivered', 'cancelled', 'return_requested', 'returning', 'returned'].includes(order.status)) { %>
                            <button onclick="cancelOrder('<%= order._id %>')" class="btn btn-danger mt-2 w-100">Cancel Order</button>
                        <% } %>
                    </div>
                </div>

                <!-- Shipping Address -->
                <div class="address-card">
                    <h5 class="mb-3">Shipping Address</h5>
                    <p class="mb-1"><strong><%= order.address.name %></strong></p>
                    <p class="mb-1"><%= order.address.streetAddress %></p>
                    <p class="mb-1"><%= order.address.city %>, <%= order.address.state %> <%= order.address.pincode %></p>
                    <p class="mb-1">Phone: <%= order.address.phone %></p>
                    <p class="mb-0">Email: <%= order.address.email %></p>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Return Modal -->
<div class="modal fade" id="returnModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Return Request</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="returnForm">
                    <div class="mb-3">
                        <label class="form-label">Reason</label>
                        <select class="form-select" id="returnReason" required>
                            <option value="">Select a reason</option>
                            <option value="Wrong size">Wrong size</option>
                            <option value="Damaged product">Damaged product</option>
                            <option value="Not as described">Not as described</option>
                            <option value="Quality issues">Quality issues</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <textarea class="form-control" id="returnDescription" rows="3" placeholder="Explain the issue..." required></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Images (Optional)</label>
                        <input type="file" class="form-control" id="returnImages" multiple accept="image/*">
                        <small class="text-muted">Max 3 images</small>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="submitReturn()">Submit</button>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
    let currentOrderId = null;

    function initiateReturn(orderId) {
        currentOrderId = orderId;
        const modal = new bootstrap.Modal(document.getElementById('returnModal'));
        modal.show();
    }

    async function submitReturn() {
        const reason = document.getElementById('returnReason').value;
        const description = document.getElementById('returnDescription').value;
        const images = document.getElementById('returnImages').files;

        if (!reason || !description) {
            Swal.fire('Error', 'Please provide a reason and description', 'error');
            return;
        }

        const formData = new FormData();
        formData.append('orderId', currentOrderId);
        formData.append('returnReason', reason);
        formData.append('returnDescription', description);
        for (let i = 0; i < Math.min(images.length, 3); i++) {
            formData.append('images', images[i]);
        }

        try {
            const response = await fetch('/orders/return', {
                method: 'POST',
                body: formData
            });
            const data = await response.json();

            if (data.success) {
                Swal.fire('Success', 'Return request submitted!', 'success').then(() => location.reload());
            } else {
                Swal.fire('Error', data.message || 'Failed to submit return', 'error');
            }
        } catch (error) {
            Swal.fire('Error', 'An error occurred', 'error');
        }
    }

    async function cancelReturn(orderId) {
        const result = await Swal.fire({
            title: 'Cancel Return?',
            text: 'Are you sure?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#dc2626',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes'
        });

        if (result.isConfirmed) {
            try {
                const response = await fetch('/orders/cancel-return', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ orderId })
                });
                const data = await response.json();

                if (data.success) {
                    Swal.fire('Success', 'Return request cancelled', 'success').then(() => location.reload());
                } else {
                    Swal.fire('Error', data.message || 'Failed to cancel', 'error');
                }
            } catch (error) {
                Swal.fire('Error', 'An error occurred', 'error');
            }
        }
    }

    async function cancelOrder(orderId) {
        const { value: reason } = await Swal.fire({
            title: 'Cancel Order',
            input: 'select',
            inputOptions: {
                'Ordered by mistake': 'Ordered by mistake',
                'Found a better price': 'Found a better price',
                'Delivery took too long': 'Delivery took too long',
                'Item no longer needed': 'Item no longer needed',
                'Other': 'Other'
            },
            inputPlaceholder: 'Select a reason',
            showCancelButton: true
        });

        if (!reason) return;

        try {
            const response = await fetch('/orders/cancel', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ orderId, reason })
            });
            const data = await response.json();

            if (data.success) {
                Swal.fire('Success', 'Order cancelled!', 'success').then(() => location.reload());
            } else {
                Swal.fire('Error', data.message || 'Failed to cancel', 'error');
            }
        } catch (error) {
            Swal.fire('Error', 'An error occurred', 'error');
        }
    }
</script>

<%- include('../partials/user/footer') %>