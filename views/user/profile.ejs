
<%- include("../../views/partials/user/header") %>
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
<link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Roboto:wght@300;400&display=swap" rel="stylesheet">

<style>
   :root {
    --primary: #1a2526;
    --secondary: #3b4f50;
    --accent: #b7950b;
    --text-light: #f5f5f5;
    --text-dark: #1a2526;
    --bg-light: #ffffff;
}
body {
        background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
        font-family: 'Roboto', sans-serif;
        color: var(--text-dark);
        margin: 0; /* Reset */
        padding: 0; /* Reset */
    }

    /* Ensure header compatibility */
    .container-fluid {
        padding: 0;
    }

    /* Breadcrumb Styling */
    .page-header.breadcrumb-wrap {
        background-color: var(--light-bg);
        padding: 10px 0;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
        margin-bottom: 30px;
        display: flex;
    justify-content: flex-start;  /* Align breadcrumbs to the left */
    align-items: center;
    }

    .breadcrumb {
        font-family: 'Roboto', sans-serif;
        font-size: 14px;
        color: var(--text-dark);
        display: flex;
        align-items: center;
        justify-content: flex-start;
    }

    .breadcrumb a {
        color: var(--primary);
        text-decoration: none;
        margin: 0 5px;
        position: relative;
        transition: color 0.3s ease;
    }

    .breadcrumb a:hover {
        color: var(--accent);
    }

    .breadcrumb span {
        margin: 0 5px;
        color: #999;
    }

    .breadcrumb a::after {
        content: '';
        position: absolute;
        width: 100%;
        height: 1px;
        background: var(--accent);
        left: 0;
        bottom: -2px;
        transform: scaleX(0);
        transition: transform 0.3s ease;
    }

    .breadcrumb a:hover::after {
        transform: scaleX(1);
    }

    /* Sidebar */
    .sidebar {
        background: var(--primary);
        border-radius: 15px;
        padding: 30px 20px;
        height: fit-content;
        position: sticky;
        top: 20px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    }

    .sidebar h2 {
        font-family: 'Playfair Display', serif;
        color: var(--text-light);
        font-size: 24px;
        margin-bottom: 30px;
        border-bottom: 1px solid rgba(255, 255, 255, 0.2);
        padding-bottom: 10px;
    }

    .sidebar .nav-link {
        color: var(--text-light);
        padding: 12px 15px;
        border-radius: 8px;
        margin-bottom: 10px;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
    }

    .sidebar .nav-link:hover,
    .sidebar .nav-link.active {
        background: rgba(255, 255, 255, 0.1);
        transform: translateX(5px);
    }

    .sidebar .nav-link i {
        margin-right: 12px;
        font-size: 18px;
    }

    /* Main Content */
    .main-content {
        background: white;
        border-radius: 15px;
        padding: 40px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
    }

    .main-content h2 {
        font-family: 'Playfair Display', serif;
        color: var(--primary);
        font-size: 32px;
        margin-bottom: 30px;
        position: relative;
    }

    .main-content h2::after {
        content: '';
        position: absolute;
        width: 50px;
        height: 2px;
        background: var(--accent);
        bottom: -10px;
        left: 0;
    }

    /* Form Styling */
    .form-control {
        border-radius: 8px;
        border: 1px solid #ddd;
        padding: 12px;
        transition: all 0.3s ease;
    }

    .form-control:focus {
        border-color: var(--primary);
        box-shadow: 0 0 10px rgba(44, 62, 80, 0.1);
    }

    .form-group label {
        font-weight: 500;
        margin-bottom: 8px;
        color: var(--text-dark);
    }

    .btn-primary {
        background: var(--primary);
        border: none;
        padding: 12px 30px;
        border-radius: 8px;
        font-family: 'Roboto', sans-serif;
        font-weight: 500;
        transition: all 0.3s ease;
    }

    .btn-primary:hover {
        background: var(--secondary);
        transform: translateY(-2px);
    }

    .btn-success {
        background: var(--accent);
        border: none;
        padding: 12px 30px;
        border-radius: 8px;
    }

    .btn-success:hover {
        background: #c0392b;
    }

    /* Password Toggle */
    .password-wrapper {
        position: relative;
        margin-bottom: 15px;
    }

    .password-wrapper input {
        width: 100%;
        padding-right: 40px;
    }

    .toggle-password {
        position: absolute;
        right: 15px;
        top: 50%;
        transform: translateY(-50%);
        cursor: pointer;
        color: var(--primary);
    }
    

    /* Responsive */
    @media (max-width: 768px) {
        .sidebar {
            position: static;
            margin-bottom: 20px;
        }
        .main-content {
            padding: 20px;
        }
        .page-header.breadcrumb-wrap {
            padding: 10px 0;
        }
    }
    /* Loader Styles */
#loader-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(255, 255, 255, 0.8);
  z-index: 9999;
  display: none;
  justify-content: center;
  align-items: center;
}

.spinner-border {
  width: 3rem;
  height: 3rem;
}

</style>
<!-- Loader -->
<div id="loader-overlay">
    <div class="spinner-border text-primary" role="status">
      <span class="visually-hidden">Loading...</span>
    </div>
  </div>
  
<body>
    <!-- Breadcrumbs -->
    <div class="page-header breadcrumb-wrap">
        <div class="container">
            <div class="breadcrumb">
                <a href="/">Home</a>
                <span></span> Profile <span></span> Account
            </div>
        </div>
    </div>

    <div class="container-fluid">
        <div class="row">
            <!-- Sidebar -->
            <div class="col-lg-3 col-md-4">
                <div class="sidebar">
                    <h2>My Account</h2>
                    <a href="/userProfile" class="nav-link active">
                        <i class="bi bi-person"></i> Account Details
                    </a>
                    <a href="/address" class="nav-link">
                        <i class="bi bi-geo-alt"></i> Address
                    </a>
                    <a href="/orders" class="nav-link">
                        <i class="bi bi-cart2"></i> Orders
                    </a>
                   
                    <a href="/wallet" class="nav-link">
                        <i class="bi bi-wallet-fill"></i> Wallet
                    </a>
                    <a href="/mycoupons" class="nav-link">
                        <i class="bi bi-cash"></i> My Coupons
                    </a>
                    <a href="#" onclick="confirmLogout(event)" class="nav-link text-danger">
                        <i class="bi bi-box-arrow-right"></i> Logout
                    </a>
                </div>
            </div>

            <!-- Main Content -->
            <div class="col-lg-9 col-md-8">
                <div class="main-content">
                    <h2>Personal Information</h2>
                    <form id="profileForm" enctype="multipart/form-data">
                        <div class="row">
                            <div class="col-md-6 form-group">
                                <label>Full Name <span class="text-danger">*</span></label>
                                <input name="name" type="text" value="<%= user.name %>" class="form-control" required>
                            </div>
                            <div class="col-md-6 form-group">
                                <label>Username <span class="text-danger">*</span></label>
                                <input name="username" type="text" value="<%= user.username %>" placeholder="Set your Username" class="form-control" required>
                                <small class="text-muted">Choose a unique username</small>
                            </div>
                            <div class="col-md-6 form-group">
                                <label>Email Address</label>
                                <input type="email" value="<%= user.email %>" class="form-control" disabled>
                                <small class="text-muted">Email cannot be changed here</small>
                            </div>
                            <div class="col-md-6 form-group">
                                <label>Phone Number <span class="text-danger">*</span></label>
                                <div class="input-group">
                                    <select class="form-control w-25" id="countryCode" disabled>
                                        <option value="+91">+91</option>
                                    </select>
                                    <input type="text" name="phone" class="form-control" value="<%= user.phone %>" 
                                           pattern="[0-9]{10}" title="Please enter a valid 10-digit phone number" required>
                                </div>
                            </div>
                            <div class="col-md-6 form-group">
                                <a class="btn btn-primary mt-2" href="/change-email">Change Email</a>
                            </div>
                        </div>
                        
                        <!-- <button type="submit" class="btn btn-success mt-3">Save Changes</button> -->
<!--  -->




                        <button type="submit" class="btn btn-success mt-4">Save Changes</button>
                    </form>
                    </form>
                  
                    <hr class="my-5">

                    <h2>Change Password</h2>
                    <form id="changePasswordForm">
                        <div class="form-group">
                            <label>Current Password</label>
                            <div class="password-wrapper">
                                <input type="password" class="form-control" id="currentPassword" name="currentPassword" required>
                                <i onclick="togglePassword('currentPassword', this)" class="bi bi-eye-fill toggle-password"></i>
                            </div>
                            <small id="currentPasswordError" class="text-danger"></small>
                        </div>
                        <div class="form-group mt-3">
                            <label>New Password</label>
                            <div class="password-wrapper">
                                <input type="password" class="form-control" id="newPassword" name="newPassword" required>
                                <i onclick="togglePassword('newPassword', this)" class="bi bi-eye-fill toggle-password"></i>
                            </div>
                            <small id="newPasswordError" class="text-danger"></small>
                        </div>
                        <div class="form-group mt-3">
                            <label>Confirm New Password</label>
                            <div class="password-wrapper">
                                <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
                                <i onclick="togglePassword('confirmPassword', this)" class="bi bi-eye-fill toggle-password"></i>
                            </div>
                            <small id="confirmPasswordError" class="text-danger"></small>
                        </div>
                        <button type="submit" class="btn btn-primary mt-4">Change Password</button>
                    </form>
                    <div class="mt-3">
                        <a href="#forgotpasschange" onclick="confirmForgotPassword()" class="text-muted">Forgot Password?</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function togglePassword(inputId, icon) {
            const input = document.getElementById(inputId);
            if (input.type === "password") {
                input.type = "text";
                icon.classList.add('bi-eye-slash-fill');
                icon.classList.remove('bi-eye-fill');
            } else {
                input.type = "password";
                icon.classList.add('bi-eye-fill');
                icon.classList.remove('bi-eye-slash-fill');
            }
        }
        document.getElementById('profileForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    showLoader(); // 👈 Show loader before fetch

    const formData = new FormData(e.target);
    const data = Object.fromEntries(formData.entries());

    try {
        const response = await fetch('/update-profile', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data),
        });

        const result = await response.json();
        if (result.success) {
            await Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: 'Profile updated successfully',
                timer: 2000,
                showConfirmButton: false
            });
            window.location.href = '/userProfile';
        } else {
            hideLoader();
            Swal.fire({ icon: 'error', title: 'Oops...', text: result.message });
        }
    } catch (error) {
        hideLoader();
        console.error('Error:', error);
        Swal.fire({ icon: 'error', title: 'Oops...', text: 'An unexpected error occurred.' });
    }
});
        // document.getElementById('profileForm').addEventListener('submit', async (e) => {
        //     e.preventDefault();
        //     const formData = new FormData(e.target);
        //     const data = Object.fromEntries(formData.entries());
        //     try {
        //         const response = await fetch('/update-profile', {
        //             method: 'POST',
        //             headers: { 'Content-Type': 'application/json' },
        //             body: JSON.stringify(data),
        //         });
        //         const result = await response.json();
        //         if (result.success) {
        //             await Swal.fire({
        //                 icon: 'success',
        //                 title: 'Success!',
        //                 text: 'Profile updated successfully',
        //                 timer: 2000,
        //                 showConfirmButton: false
        //             });
        //             window.location.href = '/userProfile';
        //         } else {
        //             Swal.fire({
        //                 icon: 'error',
        //                 title: 'Oops...',
        //                 text: result.message,
        //             });
        //         }
        //     } catch (error) {
        //         console.error('Error:', error);
        //         Swal.fire({
        //             icon: 'error',
        //             title: 'Oops...',
        //             text: 'An unexpected error occurred. Please try again.',
        //         });
        //     }
        // });
        document.getElementById('changePasswordForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    showLoader();

    // your validation and fetch logic...
    try {
        const response = await fetch('/change-password', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ currentPassword, newPassword, confirmPassword }),
        });
        const result = await response.json();

        if (result.success) {
            await Swal.fire({ icon: 'success', title: 'Success!', text: 'Password changed successfully', timer: 2000, showConfirmButton: false });
            window.location.href = '/userProfile';
        } else {
            hideLoader();
            if (result.error === 'current_password_incorrect') {
                document.getElementById('currentPasswordError').textContent = 'Current password is incorrect.';
            } else {
                Swal.fire({ icon: 'error', title: 'Oops...', text: result.message });
            }
        }
    } catch (error) {
        hideLoader();
        console.error('Error:', error);
        Swal.fire({ icon: 'error', title: 'Oops...', text: 'An unexpected error occurred.' });
    }
});

        // document.getElementById('changePasswordForm').addEventListener('submit', async (e) => {
        //     e.preventDefault();
        //     document.getElementById('currentPasswordError').textContent = '';
        //     document.getElementById('newPasswordError').textContent = '';
        //     document.getElementById('confirmPasswordError').textContent = '';

        //     const currentPassword = document.getElementById('currentPassword').value;
        //     const newPassword = document.getElementById('newPassword').value;
        //     const confirmPassword = document.getElementById('confirmPassword').value;

        //     let isValid = true;
        //     if (newPassword.length < 8 || !/[a-zA-Z]/.test(newPassword) || !/\d/.test(newPassword)) {
        //         document.getElementById('newPasswordError').textContent = 'Password must be at least 8 characters long and contain both letters and numbers.';
        //         isValid = false;
        //     }
        //     if (newPassword !== confirmPassword) {
        //         document.getElementById('confirmPasswordError').textContent = 'Passwords do not match.';
        //         isValid = false;
        //     }
        //     if (!isValid) return;

        //     try {
        //         const response = await fetch('/change-password', {
        //             method: 'POST',
        //             headers: { 'Content-Type': 'application/json' },
        //             body: JSON.stringify({ currentPassword, newPassword, confirmPassword }),
        //         });
        //         const result = await response.json();
        //         if (result.success) {
        //             await Swal.fire({
        //                 icon: 'success',
        //                 title: 'Success!',
        //                 text: 'Password changed successfully',
        //                 timer: 2000,
        //                 showConfirmButton: false
        //             });
        //             window.location.href = '/userProfile';
        //         } else {
        //             if (result.error === 'current_password_incorrect') {
        //                 document.getElementById('currentPasswordError').textContent = 'Current password is incorrect.';
        //             } else {
        //                 Swal.fire({
        //                     icon: 'error',
        //                     title: 'Oops...',
        //                     text: result.message,
        //                 });
        //             }
        //         }
        //     } catch (error) {
        //         console.error('Error:', error);
        //         Swal.fire({
        //             icon: 'error',
        //             title: 'Oops...',
        //             text: 'An unexpected error occurred. Please try again.',
        //         });
        //     }
        // });

        function confirmLogout(event) {
            event.preventDefault();
            Swal.fire({
                title: "Are you sure?",
                text: "You will be logged out!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, Logout"
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = "/logout";
                }
            });
        }

        function confirmForgotPassword() {
            Swal.fire({
                title: "Are you sure?",
                text: "You'll be logged out to reset your password.",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Yes, proceed",
                cancelButtonText: "Cancel",
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6"
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = "/forgot-password-logout";
                }
            });
        }

        // Preview selected image before upload


// Remove profile image


// Update form submission to handle file upload
function showLoader() {
    document.getElementById('loader-overlay').style.display = 'flex';
}

function hideLoader() {
    document.getElementById('loader-overlay').style.display = 'none';
}
showLoader();
    window.addEventListener('load', () => hideLoader());
    </script>
</body>

<%- include("../../views/partials/user/footer") %>